name: Build and deploy an app to AKS
"on":
    push:
        branches:
            - master
    workflow_dispatch: null
env:
    AZURE_CONTAINER_REGISTRY: testdraft
    CONTAINER_NAME: sbwcd
    ENVIRONMENT_NAME: drafttest
    RESOURCE_GROUP: testdraft
jobs:
    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Azure login
              uses: azure/login@v1.4.3
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - name: Build and push image to ACR
              run: |
                az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .
    deploy:
        permissions:
          actions: read
          contents: read
          id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - name: Azure login
              uses: azure/login@v1.4.3
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - id: get-acr-creds
              name: Get ACR credentials
              run: |
                az acr update -n ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} --admin-enabled true
                ACR_USERNAME=$(az acr credential show -g ${{ env.RESOURCE_GROUP }} -n ${{ env.AZURE_CONTAINER_REGISTRY }} --query username -o tsv)
                ACR_PASSWORD=$(az acr credential show -g ${{ env.RESOURCE_GROUP }} -n ${{ env.AZURE_CONTAINER_REGISTRY }} --query passwords[0].value -o tsv)
                echo "::add-mask::${ACR_USERNAME}"
                echo "::set-output name=username::${ACR_USERNAME}"
                echo "::add-mask::${ACR_PASSWORD}"
                echo "::set-output name=password::${ACR_PASSWORD}"
            - name: Deploy Azure Container App
              run: |-
                az deployment group create --resource-group ${{ env.RESOURCE_GROUP }} \
                  --template-file ./deploy/main.bicep \
                  --parameters registry_login_server=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io \
                  --parameters registry_username=${{ steps.get-acr-creds.outputs.username }} \
                  --parameters registry_password=${{ steps.get-acr-creds.outputs.password }} \
                  --parameters app_image=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
